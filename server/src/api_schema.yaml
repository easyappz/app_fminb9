openapi: 3.0.0
info:
  title: Easyappz Chat API
  version: 1.0.0
  description: |
    HTTP API for a simple chat service. Built with Express and MongoDB (Mongoose).

    Base URL: http://localhost:3001/api

servers:
  - url: http://localhost:3001/api
    description: Local server

paths:
  /health:
    get:
      summary: Health check
      description: Returns server health information.
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                status: ok
                uptime: 123.456
                timestamp: 2025-01-01T00:00:00.000Z
        '500':
          description: Server error
          content:
            application/json:
              example:
                error: Unexpected error details

  /hello:
    get:
      summary: Demo hello endpoint
      responses:
        '200':
          description: Hello
          content:
            application/json:
              example:
                message: Hello from API!
        '500':
          description: Server error
          content:
            application/json:
              example:
                error: Unexpected error details

  /status:
    get:
      summary: Demo status endpoint
      responses:
        '200':
          description: Status
          content:
            application/json:
              example:
                status: ok
                timestamp: 2025-01-01T00:00:00.000Z
        '500':
          description: Server error
          content:
            application/json:
              example:
                error: Unexpected error details

  /chat/messages:
    get:
      summary: List chat messages
      description: |
        Returns a descending (newest first) list of messages with keyset pagination.
        Use `before` to get older messages.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          required: false
          description: Max number of items to return (1..100, default 50)
        - in: query
          name: before
          schema:
            type: string
            format: date-time
          required: false
          description: ISO8601 timestamp; return messages strictly before this time
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  hasMore:
                    type: boolean
                  nextBefore:
                    type: string
                    nullable: true
                    description: ISO8601 timestamp to use as `before` for the next page
              examples:
                default:
                  value:
                    items:
                      - _id: 665e2d5a8a4f4d4a7a0c1234
                        author: Alice
                        text: Hello world
                        createdAt: 2025-01-01T10:00:00.000Z
                        updatedAt: 2025-01-01T10:00:00.000Z
                      - _id: 665e2d5a8a4f4d4a7a0c5678
                        author: Bob
                        text: Hi!
                        createdAt: 2025-01-01T09:59:00.000Z
                        updatedAt: 2025-01-01T09:59:00.000Z
                    hasMore: true
                    nextBefore: 2025-01-01T09:59:00.000Z
        '400':
          description: Invalid request (e.g., bad `before` value)
          content:
            application/json:
              example:
                error: Invalid "before" date format
        '500':
          description: Server error
          content:
            application/json:
              example:
                error: Unexpected error details

    post:
      summary: Create a new message
      description: Creates and returns a new message document.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [author, text]
              properties:
                author:
                  type: string
                  maxLength: 80
                text:
                  type: string
                  maxLength: 2000
            examples:
              default:
                value:
                  author: Alice
                  text: Hello from client
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                default:
                  value:
                    _id: 665e2d5a8a4f4d4a7a0c9999
                    author: Alice
                    text: Hello from client
                    createdAt: 2025-01-01T10:05:00.000Z
                    updatedAt: 2025-01-01T10:05:00.000Z
        '400':
          description: Validation error
          content:
            application/json:
              examples:
                missingAuthor:
                  value:
                    error: author is required and must be a non-empty string
                longText:
                  value:
                    error: text must be at most 2000 characters
        '500':
          description: Server error
          content:
            application/json:
              example:
                error: Unexpected error details

components:
  schemas:
    Message:
      type: object
      properties:
        _id:
          type: string
        author:
          type: string
        text:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

x-examples:
  curl-list:
    command: >-
      curl -G 'http://localhost:3001/api/chat/messages' --data-urlencode 'limit=50' --data-urlencode 'before=2025-01-01T00:00:00.000Z'
  curl-create:
    command: >-
      curl -X POST 'http://localhost:3001/api/chat/messages' -H 'Content-Type: application/json' -d '{"author":"Alice","text":"Hello from client"}'
